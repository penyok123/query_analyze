# # import logging
# # import random
# # import time
# # import traceback
# # from datetime import datetime
# # from apscheduler.schedulers.background import BackgroundScheduler
# #
# # from apscheduler.schedulers.blocking import BlockingScheduler
# #
# #
# # def spider_schedule():
# #     print("____________—__")
# #     try:
# #         print('spider start... ', datetime.now().strftime('%Y-%m-%d %X'))
# #         # --------自己的业务代码-------
# #         pass
# #         # ---------------------------
# #         print('spider end... ', datetime.now().strftime('%Y-%m-%d %X'))
# #
# #     except Exception as e:
# #         print(traceback.format_exc(e))
# #     finally:
# #         interval_minutes = random.randint(1, 2)  # 1-120分钟随机选一个时间
# #         interval_seconds = random.randint(1, 10)  # 1~60秒随机选一个时间
# #         print(interval_minutes)
# #         print(interval_seconds)
# #
# #
# #
# # def my_job():
# #     print(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time())))
# #
# #
# # scheduler = BlockingScheduler()
# # scheduler.add_job(spider_schedule, 'interval', seconds=10, id='spider_schedule')
# # print("----------")
# # scheduler.start()
# # print("stop------")
# # scheduler.remove_job()
# import random
# import datetime
# import time
#
#
# def get_list(date):
#     return datetime.datetime.strptime(date, "%Y-%m-%d %H:%M:%S").timestamp()
#
#
# def strTimeProp(start, end, prop, frmt):
#     stime = time.mktime(time.strptime(start, frmt))
#     etime = time.mktime(time.strptime(end, frmt))
#     ptime = stime + prop * (etime - stime)
#     return int(ptime)
#
#
# def randomDate_six_one(start, end, frmt='%Y-%m-%d %H:%M:%S'):
#     return time.strftime(frmt, time.localtime(strTimeProp(start, end, random.random(), frmt)))
#
#
# def randomDate(create_time, frmt='%Y-%m-%d %H:%M:%S', action_type=None):
#     if action_type in ("follow", "click"):
#         action_num = random.randint(1, 3)
#
#     if action_type == "comment":
#         action_num = random.randint(1, 2)
#
#     start = str(create_time + datetime.timedelta(minutes=30))
#     print(start)
#     end = str(create_time + datetime.timedelta(hours=2))
#     print(end)
#     random_times = [randomDate_six_one(start, end, frmt) for _ in range(action_num)]
#     have_sort_times = sorted(random_times, key=lambda date: get_list(date))
#
#     return have_sort_times
#
#
# create_time = "2019-12-28 10:03:05"
# createt = datetime.datetime.strptime(create_time, '%Y-%m-%d %H:%M:%S')
# # print(createt)
# have_sort_times = randomDate(create_time=createt, action_type="comment")
# # print(have_sort_times)
print(len([32451411, 32451419, 32451420, 32451427, 32451429, 32451455, 32451473, 32451474, 32451475, 32451476, 32451480,
           32451481, 32451500, 32451505, 32451508, 32451509, 32451513, 32451517, 32451519, 32451521, 32451526, 32451536,
           32451553, 32451562, 32451573, 32451576, 32451581, 32451587, 32451588, 32451593, 32451594, 32451595, 32451599,
           32451602, 32451603, 32451607, 32451611, 32451622, 32451624, 32451632, 32451634, 32451635, 32451636, 32451638,
           32451639, 32451641, 32451676, 32451682, 32451685, 32451693, 32451695, 32451701, 32451708, 32451723, 32451726,
           32451732, 32451733, 32451735, 32451739, 32451743, 32451744, 32451747, 32451763, 32451772, 32451776, 32451778,
           32451780, 32451785, 32451791, 32451796, 32451811, 32451815, 32451817, 32451819, 32451822, 32451835, 32451838,
           32451848, 32451858, 32451860, 32451863, 32451870, 32451876, 32451878, 32451879, 32451886, 32451888, 32451889,
           32451900, 32451906, 32451910, 32451912, 32451913, 32451916, 32451918, 32451925, 32451930, 32451936, 32451938,
           32451962, 32451963, 32451964, 32451965, 32451968, 32451971, 32451974, 32451979, 32451980, 32451984, 32451992,
           32451994, 32451995, 32451996, 32452005, 32452006, 32452009, 32452012, 32452015, 32452017, 32452024, 32452027,
           32452030, 32452041, 32452044, 32452048, 32452065, 32452067, 32452069, 32452070, 32452071, 32452075, 32452078,
           32452079, 32452081, 32452082, 32452084, 32452087, 32452088, 32452102, 32452125, 32452131, 32452132, 32452133,
           32452137, 32452141, 32452142, 32452145, 32452146, 32452149, 32452156, 32452159, 32452176, 32452177, 32452178,
           32452183, 32452185, 32452190, 32452193, 32452205, 32452210, 32452212, 32452216, 32452227, 32452228, 32452229,
           32452230, 32452231, 32452232, 32452233, 32452241, 32452242, 32452245, 32452247, 32452260, 32452262, 32452266,
           32452268, 32452275, 32452281, 32452283, 32452286, 32452288, 32452292, 32452298, 32452299, 32452318, 32452319,
           32452322, 32452326, 32452336, 32452348, 32452349, 32452355, 32452364, 32452368, 32452369, 32452372, 32452375,
           32452378, 32452379, 32452386, 32452396, 32452400, 32452404, 32452407, 32452408, 32452412, 32452417, 32452424,
           32452433, 32452436, 32452442, 32452444, 32452445, 32452450, 32452456, 32452459, 32452460, 32452463, 32452473,
           32452475, 32452476, 32452492, 32452505, 32452506, 32452507, 32452512, 32452513, 32452515, 32452521, 32452525,
           32452529, 32452540, 32452541, 32452549, 32452552, 32452553, 32452559, 32452571, 32452578, 32452579, 32452582,
           32452587, 32452588, 32452589, 32452590, 32452591, 32452597, 32452599, 32452606, 32452613, 32452617, 32452626,
           32452628, 32452640, 32452643, 32452652, 32452658, 32452659, 32452660, 32452661, 32452668, 32452669, 32452683,
           32452686, 32452698, 32452699, 32452704, 32452709, 32452722, 32452735, 32452738, 32452746, 32452758, 32452760,
           32452762, 32452768, 32452774, 32452780, 32452786, 32452803, 32452808, 32452824, 32452828, 32452829, 32452830,
           32452835, 32452840, 32452844, 32452856, 32452863, 32452868, 32452871, 32452872, 32452879, 32452881, 32452896,
           32452902, 32452910, 32452916, 32452930, 32452935, 32452945, 32452951, 32452958, 32452968, 32452972, 32452975,
           32452979, 32452985, 32453000, 32453014, 32453024, 32453034, 32453041, 32453047, 32453049, 32453051, 32453055,
           32453057, 32453058, 32453063, 32453076, 32453090, 32453097, 32453104, 32453105, 32453111, 32453118, 32453119,
           32453133, 32453140, 32453141, 32453144, 32453147, 32453154, 32453156, 32453161, 32453163, 32453171, 32453172,
           32453174, 32453175, 32453178, 32453181, 32453202, 32453210, 32453213, 32453215, 32453216, 32453245, 32453266,
           32453270, 32453273, 32453274, 32453279, 32453283, 32453287, 32453288, 32453299, 32453313, 32453315, 32453323,
           32453348, 32453349, 32453356, 32453358, 32453361, 32453362, 32453363, 32453365, 32453371, 32453373, 32453376,
           32453389, 32453390, 32453391, 32453392, 32453400, 32453428, 32453435, 32453436, 32453445, 32453454, 32453456,
           32453460, 32453483, 32453485, 32453488, 32453494, 32453497, 32453499, 32453503, 32453506, 32453507, 32453517,
           32453525, 32453532, 32453534, 32453542, 32453544, 32453547, 32453564, 32453565, 32453568, 32453571, 32453572,
           32453574, 32453584, 32453588, 32453592, 32453594, 32453601, 32453605, 32453612, 32453614, 32453616, 32453618,
           32453622, 32453628, 32453629, 32453630, 32453632, 32453636, 32453656, 32453671, 32453672, 32453679, 32453683,
           32453706, 32453715, 32453752, 32453753, 32453756, 32453769, 32453778, 32453782, 32453785, 32453790, 32453796,
           32453803, 32453805, 32453818, 32453828, 32453831, 32453832, 32453842, 32453845, 32453852, 32453854, 32453856,
           32453864, 32453865, 32453868, 32453878, 32453881, 32453882, 32453893, 32453903, 32453924, 32453927, 32453929,
           32453932, 32453935, 32453938, 32453941, 32453943, 32453944, 32453945, 32453946, 32453950, 32453955, 32453957,
           32453959, 32453961, 32453970, 32453980, 32453982, 32453983, 32453984, 32453989, 32453991, 32453995, 32453996,
           32454007, 32454013, 32454023, 32454028, 32454030, 32454031, 32454035, 32454043, 32454069, 32454070, 32454071,
           32454073, 32454075, 32454085, 32454108, 32454110, 32454112, 32454121, 32454125, 32454136, 32454140, 32454142,
           32454144, 32454161, 32454166, 32454168, 32454176, 32454177, 32454185, 32454194, 32454195, 32454207, 32454209,
           32454226, 32454236, 32454248, 32454253, 32454254, 32454255, 32454265, 32454268, 32454272, 32454277, 32454309,
           32454311, 32454317, 32454336, 32454351, 32454360, 32454367, 32454384, 32454392, 32454407, 32454426, 32454435,
           32454440, 32454457, 32454468, 32454488, 32454513, 32454555, 32462062, 32462177]))
